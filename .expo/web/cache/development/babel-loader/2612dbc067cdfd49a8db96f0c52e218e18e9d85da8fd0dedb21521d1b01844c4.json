{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { __awaiter } from \"tslib\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport _ from 'lodash';\nimport Camera from \"./Camera\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FLASH_MODE_AUTO = 'auto';\nvar FLASH_MODE_ON = 'on';\nvar FLASH_MODE_OFF = 'off';\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nexport var CameraType;\n(function (CameraType) {\n  CameraType[\"Front\"] = \"front\";\n  CameraType[\"Back\"] = \"back\";\n})(CameraType || (CameraType = {}));\nvar CameraScreen = function (_Component) {\n  _inherits(CameraScreen, _Component);\n  var _super = _createSuper(CameraScreen);\n  function CameraScreen(props) {\n    var _this;\n    _classCallCheck(this, CameraScreen);\n    _this = _super.call(this, props);\n    _this.currentFlashArrayPosition = 0;\n    _this.flashArray = [{\n      mode: FLASH_MODE_AUTO,\n      image: _.get(props, 'flashImages.auto')\n    }, {\n      mode: FLASH_MODE_ON,\n      image: _.get(props, 'flashImages.on')\n    }, {\n      mode: FLASH_MODE_OFF,\n      image: _.get(props, 'flashImages.off')\n    }];\n    _this.state = {\n      captureImages: [],\n      flashData: _this.flashArray[_this.currentFlashArrayPosition],\n      torchMode: false,\n      ratios: [],\n      ratioArrayPosition: -1,\n      imageCaptured: false,\n      captured: false,\n      cameraType: CameraType.Back\n    };\n    return _this;\n  }\n  _createClass(CameraScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var ratios = [];\n      if (this.props.cameraRatioOverlay) {\n        ratios = this.props.cameraRatioOverlay.ratios || [];\n      }\n      this.setState({\n        ratios: ratios || [],\n        ratioArrayPosition: ratios.length > 0 ? 0 : -1\n      });\n    }\n  }, {\n    key: \"isCaptureRetakeMode\",\n    value: function isCaptureRetakeMode() {\n      return !!(this.props.allowCaptureRetake && !_.isUndefined(this.state.imageCaptured));\n    }\n  }, {\n    key: \"renderFlashButton\",\n    value: function renderFlashButton() {\n      var _this2 = this;\n      return !this.isCaptureRetakeMode() && _jsx(TouchableOpacity, {\n        style: {\n          paddingHorizontal: 15\n        },\n        onPress: function onPress() {\n          return _this2.onSetFlash();\n        },\n        children: _jsx(Image, {\n          style: [{\n            flex: 1,\n            justifyContent: 'center'\n          }, this.props.torchImageStyle],\n          source: this.state.flashData.image,\n          resizeMode: \"contain\"\n        })\n      });\n    }\n  }, {\n    key: \"renderTorchButton\",\n    value: function renderTorchButton() {\n      var _this3 = this;\n      return !this.isCaptureRetakeMode() && _jsx(TouchableOpacity, {\n        style: {\n          paddingHorizontal: 15\n        },\n        onPress: function onPress() {\n          return _this3.onSetTorch();\n        },\n        children: _jsx(Image, {\n          style: [{\n            flex: 1,\n            justifyContent: 'center'\n          }, this.props.torchImageStyle],\n          source: this.state.torchMode ? this.props.torchOnImage : this.props.torchOffImage,\n          resizeMode: \"contain\"\n        })\n      });\n    }\n  }, {\n    key: \"renderSwitchCameraButton\",\n    value: function renderSwitchCameraButton() {\n      var _this4 = this;\n      return this.props.cameraFlipImage && !this.isCaptureRetakeMode() && _jsx(TouchableOpacity, {\n        style: {\n          paddingHorizontal: 15\n        },\n        onPress: function onPress() {\n          return _this4.onSwitchCameraPressed();\n        },\n        children: _jsx(Image, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          source: this.props.cameraFlipImage,\n          resizeMode: \"contain\"\n        })\n      });\n    }\n  }, {\n    key: \"renderTopButtons\",\n    value: function renderTopButtons() {\n      return !this.props.hideControls && _jsxs(SafeAreaView, {\n        style: styles.topButtons,\n        children: [this.renderFlashButton(), this.renderSwitchCameraButton(), this.renderTorchButton()]\n      });\n    }\n  }, {\n    key: \"renderCamera\",\n    value: function renderCamera() {\n      var _this5 = this;\n      return _jsx(View, {\n        style: styles.cameraContainer,\n        children: this.isCaptureRetakeMode() ? _jsx(Image, {\n          style: {\n            flex: 1,\n            justifyContent: 'flex-end'\n          },\n          source: {\n            uri: this.state.imageCaptured.uri\n          }\n        }) : _jsx(Camera, {\n          ref: function ref(cam) {\n            return _this5.camera = cam;\n          },\n          style: {\n            flex: 1,\n            justifyContent: 'flex-end'\n          },\n          cameraType: this.state.cameraType,\n          flashMode: this.state.flashData.mode,\n          torchMode: this.state.torchMode ? 'on' : 'off',\n          focusMode: this.props.focusMode,\n          zoomMode: this.props.zoomMode,\n          ratioOverlay: this.state.ratios[this.state.ratioArrayPosition],\n          showFrame: this.props.showFrame,\n          scanBarcode: this.props.scanBarcode,\n          laserColor: this.props.laserColor,\n          frameColor: this.props.frameColor,\n          onReadCode: this.props.onReadCode\n        })\n      });\n    }\n  }, {\n    key: \"numberOfImagesTaken\",\n    value: function numberOfImagesTaken() {\n      var numberTook = this.state.captureImages.length;\n      if (numberTook >= 2) {\n        return numberTook;\n      } else if (this.state.captured) {\n        return '1';\n      } else {\n        return '';\n      }\n    }\n  }, {\n    key: \"renderCaptureButton\",\n    value: function renderCaptureButton() {\n      var _this6 = this;\n      return this.props.captureButtonImage && !this.isCaptureRetakeMode() && _jsx(View, {\n        style: styles.captureButtonContainer,\n        children: _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this6.onCaptureImagePressed();\n          },\n          children: [_jsx(Image, {\n            source: this.props.captureButtonImage,\n            style: this.props.captureButtonImageStyle,\n            resizeMode: \"contain\"\n          }), this.props.showCapturedImageCount && _jsx(View, {\n            style: styles.textNumberContainer,\n            children: _jsx(Text, {\n              children: this.numberOfImagesTaken()\n            })\n          })]\n        })\n      });\n    }\n  }, {\n    key: \"renderRatioStrip\",\n    value: function renderRatioStrip() {\n      var _this7 = this;\n      if (this.state.ratios.length === 0 || this.props.hideControls) {\n        return null;\n      }\n      return _jsx(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'column',\n          justifyContent: 'flex-end'\n        },\n        children: _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            alignItems: 'center',\n            paddingRight: 10,\n            paddingLeft: 20\n          },\n          children: [_jsxs(Text, {\n            style: styles.ratioBestText,\n            children: [\"Your images look best at a \", this.state.ratios[0] || '', \" ratio\"]\n          }), _jsx(TouchableOpacity, {\n            style: {\n              flex: 1,\n              flexDirection: 'row',\n              justifyContent: 'flex-end',\n              alignItems: 'center',\n              padding: 8\n            },\n            onPress: function onPress() {\n              return _this7.onRatioButtonPressed();\n            },\n            children: _jsx(Text, {\n              style: styles.ratioText,\n              children: this.props.ratioOverlay\n            })\n          })]\n        })\n      });\n    }\n  }, {\n    key: \"sendBottomButtonPressedAction\",\n    value: function sendBottomButtonPressedAction(type, captureRetakeMode, image) {\n      if (this.props.onBottomButtonPressed) {\n        this.props.onBottomButtonPressed({\n          type: type,\n          captureImages: this.state.captureImages,\n          captureRetakeMode: captureRetakeMode,\n          image: image\n        });\n      }\n    }\n  }, {\n    key: \"onButtonPressed\",\n    value: function onButtonPressed(type) {\n      var captureRetakeMode = this.isCaptureRetakeMode();\n      if (captureRetakeMode) {\n        if (type === 'left') {\n          this.setState({\n            imageCaptured: undefined\n          });\n        }\n      } else {\n        this.sendBottomButtonPressedAction(type, captureRetakeMode, null);\n      }\n    }\n  }, {\n    key: \"renderBottomButton\",\n    value: function renderBottomButton(type) {\n      var _this8 = this;\n      var showButton = true;\n      if (showButton) {\n        var buttonNameSuffix = this.isCaptureRetakeMode() ? 'CaptureRetakeButtonText' : 'ButtonText';\n        var buttonText = _(this.props).get(\"actions.\" + type + buttonNameSuffix);\n        return _jsx(TouchableOpacity, {\n          style: [styles.bottomButton, {\n            justifyContent: type === 'left' ? 'flex-start' : 'flex-end'\n          }],\n          onPress: function onPress() {\n            return _this8.onButtonPressed(type);\n          },\n          children: _jsx(Text, {\n            style: styles.textStyle,\n            children: buttonText\n          })\n        });\n      } else {\n        return _jsx(View, {\n          style: styles.bottomContainerGap\n        });\n      }\n    }\n  }, {\n    key: \"renderBottomButtons\",\n    value: function renderBottomButtons() {\n      return !this.props.hideControls && _jsxs(SafeAreaView, {\n        style: [styles.bottomButtons, {\n          backgroundColor: '#ffffff00'\n        }],\n        children: [this.renderBottomButton('left'), this.renderCaptureButton()]\n      });\n    }\n  }, {\n    key: \"onSwitchCameraPressed\",\n    value: function onSwitchCameraPressed() {\n      var direction = this.state.cameraType === CameraType.Back ? CameraType.Front : CameraType.Back;\n      this.setState({\n        cameraType: direction\n      });\n    }\n  }, {\n    key: \"onSetFlash\",\n    value: function onSetFlash() {\n      this.currentFlashArrayPosition = (this.currentFlashArrayPosition + 1) % 3;\n      var newFlashData = this.flashArray[this.currentFlashArrayPosition];\n      this.setState({\n        flashData: newFlashData\n      });\n    }\n  }, {\n    key: \"onSetTorch\",\n    value: function onSetTorch() {\n      this.setState({\n        torchMode: !this.state.torchMode\n      });\n    }\n  }, {\n    key: \"onCaptureImagePressed\",\n    value: function onCaptureImagePressed() {\n      return __awaiter(this, void 0, void 0, function* () {\n        var image = yield this.camera.capture();\n        if (this.props.allowCaptureRetake) {\n          this.setState({\n            imageCaptured: image\n          });\n        } else {\n          if (image) {\n            this.setState({\n              captured: true,\n              imageCaptured: image,\n              captureImages: _.concat(this.state.captureImages, image)\n            });\n          }\n          this.sendBottomButtonPressedAction('capture', false, image);\n        }\n      });\n    }\n  }, {\n    key: \"onRatioButtonPressed\",\n    value: function onRatioButtonPressed() {\n      var newRatiosArrayPosition = (this.state.ratioArrayPosition + 1) % this.state.ratios.length;\n      this.setState({\n        ratioArrayPosition: newRatiosArrayPosition\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, _objectSpread(_objectSpread({\n        style: {\n          flex: 1,\n          backgroundColor: 'black'\n        }\n      }, this.props), {}, {\n        children: [Platform.OS === 'android' && this.renderCamera(), this.renderTopButtons(), Platform.OS !== 'android' && this.renderCamera(), this.renderRatioStrip(), Platform.OS === 'android' && _jsx(View, {\n          style: styles.gap\n        }), this.renderBottomButtons()]\n      }));\n    }\n  }]);\n  return CameraScreen;\n}(Component);\nexport { CameraScreen as default };\nCameraScreen.propTypes = {\n  allowCaptureRetake: PropTypes.bool\n};\nCameraScreen.defaultProps = {\n  allowCaptureRetake: false\n};\nvar styles = StyleSheet.create({\n  bottomButtons: {\n    flex: 2,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 14\n  },\n  textStyle: {\n    color: 'white',\n    fontSize: 20\n  },\n  ratioBestText: {\n    color: 'white',\n    fontSize: 18\n  },\n  ratioText: {\n    color: '#ffc233',\n    fontSize: 18\n  },\n  topButtons: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingTop: 8,\n    paddingBottom: 0\n  },\n  cameraContainer: Object.assign({}, Platform.select({\n    android: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: width,\n      height: height\n    },\n    default: {\n      flex: 10,\n      flexDirection: 'column'\n    }\n  })),\n  captureButtonContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  textNumberContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  bottomButton: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10\n  },\n  bottomContainerGap: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    padding: 10\n  },\n  gap: {\n    flex: 10,\n    flexDirection: 'column'\n  }\n});","map":{"version":3,"names":["PropTypes","React","Component","StyleSheet","Text","View","TouchableOpacity","Image","Dimensions","Platform","SafeAreaView","_","Camera","jsx","_jsx","jsxs","_jsxs","FLASH_MODE_AUTO","FLASH_MODE_ON","FLASH_MODE_OFF","_Dimensions$get","get","width","height","CameraType","CameraScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","currentFlashArrayPosition","flashArray","mode","image","state","captureImages","flashData","torchMode","ratios","ratioArrayPosition","imageCaptured","captured","cameraType","Back","_createClass","key","value","componentDidMount","cameraRatioOverlay","setState","length","isCaptureRetakeMode","allowCaptureRetake","isUndefined","renderFlashButton","_this2","style","paddingHorizontal","onPress","onSetFlash","children","flex","justifyContent","torchImageStyle","source","resizeMode","renderTorchButton","_this3","onSetTorch","torchOnImage","torchOffImage","renderSwitchCameraButton","_this4","cameraFlipImage","onSwitchCameraPressed","renderTopButtons","hideControls","styles","topButtons","renderCamera","_this5","cameraContainer","uri","ref","cam","camera","flashMode","focusMode","zoomMode","ratioOverlay","showFrame","scanBarcode","laserColor","frameColor","onReadCode","numberOfImagesTaken","numberTook","renderCaptureButton","_this6","captureButtonImage","captureButtonContainer","onCaptureImagePressed","captureButtonImageStyle","showCapturedImageCount","textNumberContainer","renderRatioStrip","_this7","flexDirection","alignItems","paddingRight","paddingLeft","ratioBestText","padding","onRatioButtonPressed","ratioText","sendBottomButtonPressedAction","type","captureRetakeMode","onBottomButtonPressed","onButtonPressed","undefined","renderBottomButton","_this8","showButton","buttonNameSuffix","buttonText","bottomButton","textStyle","bottomContainerGap","renderBottomButtons","bottomButtons","backgroundColor","direction","Front","newFlashData","capture","concat","newRatiosArrayPosition","render","_objectSpread","OS","gap","default","propTypes","bool","defaultProps","create","color","fontSize","paddingTop","paddingBottom","Object","assign","select","android","position","top","left","bottom","right"],"sources":["C:\\Users\\ahsan\\Final Year Project\\atm-app\\atm-app\\node_modules\\react-native-camera-kit\\src\\CameraScreen.tsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n  Dimensions,\n  Platform,\n  SafeAreaView,\n  ImageStyle,\n} from 'react-native';\nimport _ from 'lodash';\nimport Camera from './Camera';\n\nconst FLASH_MODE_AUTO = 'auto';\nconst FLASH_MODE_ON = 'on';\nconst FLASH_MODE_OFF = 'off';\n\nconst { width, height } = Dimensions.get('window');\n\nexport enum CameraType {\n  Front = 'front',\n  Back = 'back'\n}\n\nexport type Props = {\n  focusMode?: string,\n  zoomMode?: string,\n  ratioOverlay?: string,\n  ratioOverlayColor?: string,\n  allowCaptureRetake: boolean,\n  cameraRatioOverlay: any,\n  showCapturedImageCount?: boolean,\n  captureButtonImage: any,\n  captureButtonImageStyle: ImageStyle,\n  cameraFlipImage: any,\n  cameraFlipImageStyle: ImageStyle,\n  hideControls: any,\n  showFrame: any,\n  scanBarcode: any,\n  laserColor: any,\n  frameColor: any,\n  torchOnImage: any,\n  torchOffImage: any,\n\n  torchImageStyle: ImageStyle,\n  onReadCode: (event: any) => void;\n  onBottomButtonPressed: (event: any) => void;\n}\n\ntype State = {\n  captureImages: any[],\n  flashData: any,\n  torchMode: boolean,\n  ratios: any[],\n  ratioArrayPosition: number,\n  imageCaptured: any,\n  captured: boolean,\n  cameraType: CameraType,\n}\n\nexport default class CameraScreen extends Component<Props, State> {\n  static propTypes = {\n    allowCaptureRetake: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    allowCaptureRetake: false,\n  };\n\n  currentFlashArrayPosition: number;\n  flashArray: any[];\n  camera: any;\n\n  constructor(props: Props) {\n    super(props);\n    this.currentFlashArrayPosition = 0;\n    this.flashArray = [\n      {\n        mode: FLASH_MODE_AUTO,\n        image: _.get(props, 'flashImages.auto'),\n      },\n      {\n        mode: FLASH_MODE_ON,\n        image: _.get(props, 'flashImages.on'),\n      },\n      {\n        mode: FLASH_MODE_OFF,\n        image: _.get(props, 'flashImages.off'),\n      },\n    ];\n\n    this.state = {\n      captureImages: [],\n      flashData: this.flashArray[this.currentFlashArrayPosition],\n      torchMode: false,\n      ratios: [],\n      ratioArrayPosition: -1,\n      imageCaptured: false,\n      captured: false,\n      cameraType: CameraType.Back,\n    };\n  }\n\n  componentDidMount() {\n    let ratios = [];\n    if (this.props.cameraRatioOverlay) {\n      ratios = this.props.cameraRatioOverlay.ratios || [];\n    }\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({\n      ratios: ratios || [],\n      ratioArrayPosition: ratios.length > 0 ? 0 : -1,\n    });\n  }\n\n  isCaptureRetakeMode() {\n    return !!(this.props.allowCaptureRetake && !_.isUndefined(this.state.imageCaptured));\n  }\n\n  renderFlashButton() {\n    return (\n      !this.isCaptureRetakeMode() && (\n        <TouchableOpacity style={{ paddingHorizontal: 15 }} onPress={() => this.onSetFlash()}>\n          <Image\n            style={[{ flex: 1, justifyContent: 'center' }, this.props.torchImageStyle]}\n            source={this.state.flashData.image}\n            resizeMode=\"contain\"\n          />\n        </TouchableOpacity>\n      )\n    );\n  }\n\n  renderTorchButton() {\n    return (\n      !this.isCaptureRetakeMode() && (\n        <TouchableOpacity style={{ paddingHorizontal: 15 }} onPress={() => this.onSetTorch()}>\n          <Image\n            style={[{ flex: 1, justifyContent: 'center' }, this.props.torchImageStyle]}\n            source={this.state.torchMode ? this.props.torchOnImage : this.props.torchOffImage}\n            resizeMode=\"contain\"\n          />\n        </TouchableOpacity>\n      )\n    );\n  }\n\n  renderSwitchCameraButton() {\n    return (\n      this.props.cameraFlipImage &&\n      !this.isCaptureRetakeMode() && (\n        <TouchableOpacity style={{ paddingHorizontal: 15 }} onPress={() => this.onSwitchCameraPressed()}>\n          <Image\n            style={{ flex: 1, justifyContent: 'center' }}\n            source={this.props.cameraFlipImage}\n            resizeMode=\"contain\"\n          />\n        </TouchableOpacity>\n      )\n    );\n  }\n\n  renderTopButtons() {\n    return (\n      !this.props.hideControls && (\n        <SafeAreaView style={styles.topButtons}>\n          {this.renderFlashButton()}\n          {this.renderSwitchCameraButton()}\n          {this.renderTorchButton()}\n        </SafeAreaView>\n      )\n    );\n  }\n\n  renderCamera() {\n    return (\n      <View style={styles.cameraContainer}>\n        {this.isCaptureRetakeMode() ? (\n          <Image style={{ flex: 1, justifyContent: 'flex-end' }} source={{ uri: this.state.imageCaptured.uri }} />\n        ) : (\n          <Camera\n            ref={(cam: any) => (this.camera = cam)}\n            style={{ flex: 1, justifyContent: 'flex-end' }}\n            cameraType={this.state.cameraType}\n            flashMode={this.state.flashData.mode}\n            torchMode={this.state.torchMode ? 'on' : 'off'}\n            focusMode={this.props.focusMode}\n            zoomMode={this.props.zoomMode}\n            ratioOverlay={this.state.ratios[this.state.ratioArrayPosition]}\n            showFrame={this.props.showFrame}\n            scanBarcode={this.props.scanBarcode}\n            laserColor={this.props.laserColor}\n            frameColor={this.props.frameColor}\n            onReadCode={this.props.onReadCode}\n\n          />\n        )}\n      </View>\n    );\n  }\n\n  numberOfImagesTaken() {\n    const numberTook = this.state.captureImages.length;\n    if (numberTook >= 2) {\n      return numberTook;\n    } else if (this.state.captured) {\n      return '1';\n    } else {\n      return '';\n    }\n  }\n\n  renderCaptureButton() {\n    return (\n      this.props.captureButtonImage &&\n      !this.isCaptureRetakeMode() && (\n        <View style={styles.captureButtonContainer}>\n          <TouchableOpacity onPress={() => this.onCaptureImagePressed()}>\n            <Image\n              source={this.props.captureButtonImage}\n              style={this.props.captureButtonImageStyle}\n              resizeMode=\"contain\"\n            />\n            {this.props.showCapturedImageCount && (\n              <View style={styles.textNumberContainer}>\n                <Text>{this.numberOfImagesTaken()}</Text>\n              </View>\n            )}\n          </TouchableOpacity>\n        </View>\n      )\n    );\n  }\n\n  renderRatioStrip() {\n    if (this.state.ratios.length === 0 || this.props.hideControls) {\n      return null;\n    }\n    return (\n      <View style={{ flex: 1, flexDirection: 'column', justifyContent: 'flex-end' }}>\n        <View style={{ flexDirection: 'row', alignItems: 'center', paddingRight: 10, paddingLeft: 20 }}>\n          <Text style={styles.ratioBestText}>Your images look best at a {this.state.ratios[0] || ''} ratio</Text>\n          <TouchableOpacity\n            style={{ flex: 1, flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center', padding: 8 }}\n            onPress={() => this.onRatioButtonPressed()}\n          >\n            <Text style={styles.ratioText}>{this.props.ratioOverlay}</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n\n  sendBottomButtonPressedAction(type: string, captureRetakeMode: boolean, image: null) {\n    if (this.props.onBottomButtonPressed) {\n      this.props.onBottomButtonPressed({ type, captureImages: this.state.captureImages, captureRetakeMode, image });\n    }\n  }\n\n  onButtonPressed(type: string) {\n    const captureRetakeMode = this.isCaptureRetakeMode();\n    if (captureRetakeMode) {\n      if (type === 'left') {\n        this.setState({ imageCaptured: undefined });\n      }\n    } else {\n      this.sendBottomButtonPressedAction(type, captureRetakeMode, null);\n    }\n  }\n\n  renderBottomButton(type: string) {\n    const showButton = true;\n    if (showButton) {\n      const buttonNameSuffix = this.isCaptureRetakeMode() ? 'CaptureRetakeButtonText' : 'ButtonText';\n      const buttonText = _(this.props).get(`actions.${type}${buttonNameSuffix}`);\n      return (\n        <TouchableOpacity\n          style={[styles.bottomButton, { justifyContent: type === 'left' ? 'flex-start' : 'flex-end' }]}\n          onPress={() => this.onButtonPressed(type)}\n        >\n          <Text style={styles.textStyle}>{buttonText}</Text>\n        </TouchableOpacity>\n      );\n    } else {\n      return <View style={styles.bottomContainerGap} />;\n    }\n  }\n\n  renderBottomButtons() {\n    return (\n      !this.props.hideControls && (\n        <SafeAreaView style={[styles.bottomButtons, { backgroundColor: '#ffffff00' }]}>\n          {this.renderBottomButton('left')}\n          {this.renderCaptureButton()}\n        </SafeAreaView>\n      )\n    );\n  }\n\n  onSwitchCameraPressed() {\n    const direction = this.state.cameraType === CameraType.Back ? CameraType.Front : CameraType.Back;\n    this.setState({ cameraType: direction });\n  }\n\n  onSetFlash() {\n    this.currentFlashArrayPosition = (this.currentFlashArrayPosition + 1) % 3;\n    const newFlashData = this.flashArray[this.currentFlashArrayPosition];\n    this.setState({ flashData: newFlashData });\n  }\n\n  onSetTorch() {\n    this.setState({ torchMode: !this.state.torchMode });\n  }\n\n  async onCaptureImagePressed() {\n    const image = await this.camera.capture();\n\n    if (this.props.allowCaptureRetake) {\n      this.setState({ imageCaptured: image });\n    } else {\n      if (image) {\n        this.setState({\n          captured: true,\n          imageCaptured: image,\n          captureImages: _.concat(this.state.captureImages, image),\n        });\n      }\n      this.sendBottomButtonPressedAction('capture', false, image);\n    }\n  }\n\n  onRatioButtonPressed() {\n    const newRatiosArrayPosition = (this.state.ratioArrayPosition + 1) % this.state.ratios.length;\n    this.setState({ ratioArrayPosition: newRatiosArrayPosition });\n  }\n\n  render() {\n    return (\n      <View style={{ flex: 1, backgroundColor: 'black' }} {...this.props}>\n        {Platform.OS === 'android' && this.renderCamera()}\n        {this.renderTopButtons()}\n        {Platform.OS !== 'android' && this.renderCamera()}\n        {this.renderRatioStrip()}\n        {Platform.OS === 'android' && <View style={styles.gap} />}\n        {this.renderBottomButtons()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create(\n  {\n    bottomButtons: {\n      flex: 2,\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      padding: 14,\n    },\n    textStyle: {\n      color: 'white',\n      fontSize: 20,\n    },\n    ratioBestText: {\n      color: 'white',\n      fontSize: 18,\n    },\n    ratioText: {\n      color: '#ffc233',\n      fontSize: 18,\n    },\n    topButtons: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      paddingTop: 8,\n      paddingBottom: 0,\n    },\n    cameraContainer: {\n      ...Platform.select({\n        android: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width,\n          height,\n        },\n        default: {\n          flex: 10,\n          flexDirection: 'column',\n        },\n      }),\n    },\n    captureButtonContainer: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    textNumberContainer: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    bottomButton: {\n      flex: 1,\n      flexDirection: 'row',\n      alignItems: 'center',\n      padding: 10,\n    },\n    bottomContainerGap: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      padding: 10,\n    },\n    gap: {\n      flex: 10,\n      flexDirection: 'column',\n    },\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}