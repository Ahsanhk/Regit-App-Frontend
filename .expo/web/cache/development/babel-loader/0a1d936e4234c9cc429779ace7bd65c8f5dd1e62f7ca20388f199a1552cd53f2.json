{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ThreeDotMenu = function ThreeDotMenu() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMenuVisible = _useState2[0],\n    setMenuVisible = _useState2[1];\n  var toggleMenu = function toggleMenu() {\n    setMenuVisible(!isMenuVisible);\n  };\n  var handleRename = function handleRename() {\n    toggleMenu();\n  };\n  var handleDelete = function handleDelete() {\n    toggleMenu();\n  };\n  var handleCloseMenu = function handleCloseMenu() {\n    setMenuVisible(false);\n  };\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: handleCloseMenu,\n    children: _jsx(View, {\n      style: styles.fullScreenContainer,\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(TouchableOpacity, {\n          onPress: toggleMenu,\n          children: _jsx(Text, {\n            style: {\n              fontSize: 54\n            },\n            children: \"\\u22EE\"\n          })\n        }), _jsx(Modal, {\n          transparent: true,\n          visible: isMenuVisible,\n          onRequestClose: toggleMenu,\n          children: _jsxs(View, {\n            style: styles.modalContainer,\n            children: [_jsx(TouchableOpacity, {\n              onPress: handleRename,\n              children: _jsx(Text, {\n                children: \"Rename\"\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: handleDelete,\n              children: _jsx(Text, {\n                children: \"Delete\"\n              })\n            })]\n          })\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  fullScreenContainer: {\n    flex: 1,\n    backgroundColor: 'transparent'\n  },\n  container: {\n    flex: 1,\n    position: 'relative',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContainer: {\n    position: 'absolute',\n    right: 10,\n    backgroundColor: 'white',\n    elevation: 5,\n    padding: 10\n  }\n});\nexport default ThreeDotMenu;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","Modal","Platform","TouchableWithoutFeedback","jsx","_jsx","jsxs","_jsxs","ThreeDotMenu","_useState","_useState2","_slicedToArray","isMenuVisible","setMenuVisible","toggleMenu","handleRename","handleDelete","handleCloseMenu","onPress","children","style","styles","fullScreenContainer","container","fontSize","transparent","visible","onRequestClose","modalContainer","create","flex","backgroundColor","position","justifyContent","alignItems","right","elevation","padding"],"sources":["C:/Users/ahsan/Final Year Project/atm-app/atm-app/screens/testScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, Modal, Platform, TouchableWithoutFeedback } from 'react-native';\r\n\r\nconst ThreeDotMenu = () => {\r\n  const [isMenuVisible, setMenuVisible] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setMenuVisible(!isMenuVisible);\r\n  };\r\n\r\n  const handleRename = () => {\r\n    // Handle the \"Rename\" option here\r\n    // You can implement the logic to rename the item.\r\n    // For example, show a text input for renaming.\r\n    toggleMenu();\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    // Handle the \"Delete\" option here\r\n    // You can implement the logic to delete the item.\r\n    toggleMenu();\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    // Close the menu\r\n    setMenuVisible(false);\r\n  };\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={handleCloseMenu}>\r\n      <View style={styles.fullScreenContainer}>\r\n        <View style={styles.container}>\r\n          <TouchableOpacity onPress={toggleMenu}>\r\n            <Text style={{fontSize: 54}}>â‹®</Text>\r\n          </TouchableOpacity>\r\n\r\n          <Modal\r\n            transparent={true}\r\n            visible={isMenuVisible}\r\n            onRequestClose={toggleMenu}\r\n          >\r\n            <View style={styles.modalContainer}>\r\n              <TouchableOpacity onPress={handleRename}>\r\n                <Text>Rename</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity onPress={handleDelete}>\r\n                <Text>Delete</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Modal>\r\n        </View>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  fullScreenContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'transparent',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    position: 'relative',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  modalContainer: {\r\n    position: 'absolute',\r\n    // top: Platform.OS === 'ios' ? 40 : 60, // Adjust the distance from the three dots\r\n    right: 10, // Adjust the distance from the right edge\r\n    backgroundColor: 'white',\r\n    elevation: 5, // Android elevation for shadow\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default ThreeDotMenu;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,wBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAAC,SAAA,GAAwCb,QAAQ,CAAC,KAAK,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhDG,aAAa,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAEpC,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBD,cAAc,CAAC,CAACD,aAAa,CAAC;EAChC,CAAC;EAED,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IAIzBD,UAAU,CAAC,CAAC;EACd,CAAC;EAED,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IAGzBF,UAAU,CAAC,CAAC;EACd,CAAC;EAED,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAE5BJ,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,OACER,IAAA,CAACF,wBAAwB;IAACe,OAAO,EAAED,eAAgB;IAAAE,QAAA,EACjDd,IAAA,CAACR,IAAI;MAACuB,KAAK,EAAEC,MAAM,CAACC,mBAAoB;MAAAH,QAAA,EACtCZ,KAAA,CAACV,IAAI;QAACuB,KAAK,EAAEC,MAAM,CAACE,SAAU;QAAAJ,QAAA,GAC5Bd,IAAA,CAACN,gBAAgB;UAACmB,OAAO,EAAEJ,UAAW;UAAAK,QAAA,EACpCd,IAAA,CAACP,IAAI;YAACsB,KAAK,EAAE;cAACI,QAAQ,EAAE;YAAE,CAAE;YAAAL,QAAA,EAAC;UAAC,CAAM;QAAC,CACrB,CAAC,EAEnBd,IAAA,CAACJ,KAAK;UACJwB,WAAW,EAAE,IAAK;UAClBC,OAAO,EAAEd,aAAc;UACvBe,cAAc,EAAEb,UAAW;UAAAK,QAAA,EAE3BZ,KAAA,CAACV,IAAI;YAACuB,KAAK,EAAEC,MAAM,CAACO,cAAe;YAAAT,QAAA,GACjCd,IAAA,CAACN,gBAAgB;cAACmB,OAAO,EAAEH,YAAa;cAAAI,QAAA,EACtCd,IAAA,CAACP,IAAI;gBAAAqB,QAAA,EAAC;cAAM,CAAM;YAAC,CACH,CAAC,EACnBd,IAAA,CAACN,gBAAgB;cAACmB,OAAO,EAAEF,YAAa;cAAAG,QAAA,EACtCd,IAAA,CAACP,IAAI;gBAAAqB,QAAA,EAAC;cAAM,CAAM;YAAC,CACH,CAAC;UAAA,CACf;QAAC,CACF,CAAC;MAAA,CACJ;IAAC,CACH;EAAC,CACiB,CAAC;AAE/B,CAAC;AAED,IAAME,MAAM,GAAGrB,UAAU,CAAC6B,MAAM,CAAC;EAC/BP,mBAAmB,EAAE;IACnBQ,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDR,SAAS,EAAE;IACTO,IAAI,EAAE,CAAC;IACPE,QAAQ,EAAE,UAAU;IACpBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDN,cAAc,EAAE;IACdI,QAAQ,EAAE,UAAU;IAEpBG,KAAK,EAAE,EAAE;IACTJ,eAAe,EAAE,OAAO;IACxBK,SAAS,EAAE,CAAC;IACZC,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,eAAe7B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}